<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zgw.personaltravel.mapper.PersonDAO">
  <resultMap id="BaseResultMap" type="com.zgw.personaltravel.entity.Person">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="headportrait" jdbcType="VARCHAR" property="headportrait" />
    <result column="identity" jdbcType="CHAR" property="identity" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="obligate" jdbcType="VARCHAR" property="obligate" />
    <result column="obligate1" jdbcType="VARCHAR" property="obligate1" />
  </resultMap>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, `password`, nickname, headportrait, `identity`, gender, introduction, 
    obligate, obligate1
  </sql>

  <select id="findByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">

    select * from person where account = #{account} ;

  </select>
  <select id="selectByExample" parameterType="com.zgw.personaltravel.entity.PersonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zgw.personaltravel.entity.PersonExample">
    delete from person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zgw.personaltravel.entity.Person" useGeneratedKeys="true">
    insert into person (account, `password`, nickname, 
      headportrait, `identity`, gender, 
      introduction, obligate, obligate1
      )
    values (#{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{headportrait,jdbcType=VARCHAR}, #{identity,jdbcType=CHAR}, #{gender,jdbcType=CHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{obligate,jdbcType=VARCHAR}, #{obligate1,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zgw.personaltravel.entity.Person" useGeneratedKeys="true">
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="headportrait != null">
        headportrait,
      </if>
      <if test="identity != null">
        `identity`,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="obligate != null">
        obligate,
      </if>
      <if test="obligate1 != null">
        obligate1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="headportrait != null">
        #{headportrait,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="obligate != null">
        #{obligate,jdbcType=VARCHAR},
      </if>
      <if test="obligate1 != null">
        #{obligate1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zgw.personaltravel.entity.PersonExample" resultType="java.lang.Long">
    select count(*) from person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update person
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.headportrait != null">
        headportrait = #{record.headportrait,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        `identity` = #{record.identity,jdbcType=CHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.obligate != null">
        obligate = #{record.obligate,jdbcType=VARCHAR},
      </if>
      <if test="record.obligate1 != null">
        obligate1 = #{record.obligate1,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update person
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      headportrait = #{record.headportrait,jdbcType=VARCHAR},
      `identity` = #{record.identity,jdbcType=CHAR},
      gender = #{record.gender,jdbcType=CHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      obligate = #{record.obligate,jdbcType=VARCHAR},
      obligate1 = #{record.obligate1,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zgw.personaltravel.entity.Person">
    update person
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="headportrait != null">
        headportrait = #{headportrait,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        `identity` = #{identity,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="obligate != null">
        obligate = #{obligate,jdbcType=VARCHAR},
      </if>
      <if test="obligate1 != null">
        obligate1 = #{obligate1,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zgw.personaltravel.entity.Person">
    update person
    set account = #{account,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      headportrait = #{headportrait,jdbcType=VARCHAR},
      `identity` = #{identity,jdbcType=CHAR},
      gender = #{gender,jdbcType=CHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      obligate = #{obligate,jdbcType=VARCHAR},
      obligate1 = #{obligate1,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>