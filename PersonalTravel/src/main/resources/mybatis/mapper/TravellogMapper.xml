<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zgw.personaltravel.mapper.TravellogDAO">
  <resultMap id="BaseResultMap" type="com.zgw.personaltravel.entity.Travellog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="logdate" jdbcType="DATE" property="logdate" />
    <result column="overt" jdbcType="CHAR" property="overt" />
    <result column="resource" jdbcType="VARCHAR" property="resource" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="createid" jdbcType="INTEGER" property="createid" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="star" jdbcType="INTEGER" property="star" />
    <result column="other" jdbcType="VARCHAR" property="other" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="headportrait" jdbcType="VARCHAR" property="headportrait" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, logdate, overt, `resource`, introduction, createid, place, star, other, 
    nickname, headportrait
  </sql>
  <select id="selectByExample" parameterType="com.zgw.personaltravel.entity.TravellogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from travellog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from travellog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findByKeyWord" parameterType="java.lang.String" resultMap="BaseResultMap">
    <bind name="keyWordLike" value="'%' + keyWord + '%'" />
    <bind name="keyWordLike" value="'%' + keyWord + '%'" />
    select
    <include refid="Base_Column_List" />
    from travellog
    where overt = #{overt,jdbcType=CHAR}
    and ( place like #{keyWordLike} or title  like #{keyWordLike}  )
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from travellog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zgw.personaltravel.entity.TravellogExample">
    delete from travellog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zgw.personaltravel.entity.Travellog" useGeneratedKeys="true">
    insert into travellog (title, logdate, overt, 
      `resource`, introduction, createid, 
      place, star, other, 
      nickname, headportrait)
    values (#{title,jdbcType=VARCHAR}, #{logdate,jdbcType=DATE}, #{overt,jdbcType=CHAR}, 
      #{resource,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, #{createid,jdbcType=INTEGER}, 
      #{place,jdbcType=VARCHAR}, #{star,jdbcType=INTEGER}, #{other,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{headportrait,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zgw.personaltravel.entity.Travellog" useGeneratedKeys="true">
    insert into travellog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="logdate != null">
        logdate,
      </if>
      <if test="overt != null">
        overt,
      </if>
      <if test="resource != null">
        `resource`,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="createid != null">
        createid,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="star != null">
        star,
      </if>
      <if test="other != null">
        other,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="headportrait != null">
        headportrait,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="logdate != null">
        #{logdate,jdbcType=DATE},
      </if>
      <if test="overt != null">
        #{overt,jdbcType=CHAR},
      </if>
      <if test="resource != null">
        #{resource,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="createid != null">
        #{createid,jdbcType=INTEGER},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        #{star,jdbcType=INTEGER},
      </if>
      <if test="other != null">
        #{other,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="headportrait != null">
        #{headportrait,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zgw.personaltravel.entity.TravellogExample" resultType="java.lang.Long">
    select count(*) from travellog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update travellog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.logdate != null">
        logdate = #{record.logdate,jdbcType=DATE},
      </if>
      <if test="record.overt != null">
        overt = #{record.overt,jdbcType=CHAR},
      </if>
      <if test="record.resource != null">
        `resource` = #{record.resource,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.createid != null">
        createid = #{record.createid,jdbcType=INTEGER},
      </if>
      <if test="record.place != null">
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.star != null">
        star = #{record.star,jdbcType=INTEGER},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.headportrait != null">
        headportrait = #{record.headportrait,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update travellog
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      logdate = #{record.logdate,jdbcType=DATE},
      overt = #{record.overt,jdbcType=CHAR},
      `resource` = #{record.resource,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      createid = #{record.createid,jdbcType=INTEGER},
      place = #{record.place,jdbcType=VARCHAR},
      star = #{record.star,jdbcType=INTEGER},
      other = #{record.other,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      headportrait = #{record.headportrait,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zgw.personaltravel.entity.Travellog">
    update travellog
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="logdate != null">
        logdate = #{logdate,jdbcType=DATE},
      </if>
      <if test="overt != null">
        overt = #{overt,jdbcType=CHAR},
      </if>
      <if test="resource != null">
        `resource` = #{resource,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="createid != null">
        createid = #{createid,jdbcType=INTEGER},
      </if>
      <if test="place != null">
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        star = #{star,jdbcType=INTEGER},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="headportrait != null">
        headportrait = #{headportrait,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zgw.personaltravel.entity.Travellog">
    update travellog
    set title = #{title,jdbcType=VARCHAR},
      logdate = #{logdate,jdbcType=DATE},
      overt = #{overt,jdbcType=CHAR},
      `resource` = #{resource,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      createid = #{createid,jdbcType=INTEGER},
      place = #{place,jdbcType=VARCHAR},
      star = #{star,jdbcType=INTEGER},
      other = #{other,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      headportrait = #{headportrait,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>